#-------------------------------------------------------------------------------------
#				readme00
#				by ushiku 2016-05-30
#-------------------------------------------------------------------------------------

text2featureは、とあるtextを素性に変換するプロジェクトです。
これには以下の二つが考えられます。
・textを文書ベクトルとして、類似度を測れるようにする(ベクトル空間モデル)
・textから問題(今回は、文書クラスタリング)に適した素性を設計し、教師あり学習を行うこと。
今回は、とりあえず前者からスタートしていき、そのあと、教師ありモデルに変換することを行いたいと考えています。
文書ベクトルとして考えられるのは
・word-tfidfモデル
・doc2vec
・depbigramモデルなどでしょう
これらを利用してとりあえず、類似度の計算を行えるようにします。

#-------------------------------------------------------------------------------------
#                               フォルダ設計
#-------------------------------------------------------------------------------------
corpus
	full.eda	edaの出力ファイル。BCCWJのコーパスでフル学習したeda+kyteaによる全てのtesttの出力結果の連結
	OW-test.eda	edaの出力ファイル。BCCWJのコーパスでフル学習したeda+kyteaによるOW-testの出力結果
	sample.eda	OW-test.edaの出力の先頭10文をパクってきたもの。動作確認用
bin	
	text2feature.py	.edaファイルを読み込んで特定の文に対する類似度順に上位n文を表示する。類似度は下を参照


#-------------------------------------------------------------------------------------
#                               類似度
#------------------------------------------------------------------------------------- 	
											
tfidf			unigram(単語)を次元数とするベクトル。それをtfidfを用いて値を変更している
depbigram		かかり受けとかかり先を連結させたchunkを次元数とするベクトル。
depbigram-tfidf		depbigramのtfidf
depbigram-tfidf-uni	depbigramに加えunigramをいれたものをtdidf化したベクトル


#-------------------------------------------------------------------------------------
#				プロジェクトの具体的設計
#-------------------------------------------------------------------------------------
	
1. EDAの出力データを集める ..done
2. EDAの出力データからword-tfidfのベクトルを出力できるようにする ..done
3. EDAの出力データからdepbigramのベクトルを出力できるようにする ..done
3.5 評価用のデータセットを作るしかない
4. 上記二つで比較を行う + そのためのデータを調べる 
#5. EDAの出力データから、word2vecベクトルを出力できるようにする
#6. これについても比較を行う
7. 教師ありモデルの導入を行う 

#-------------------------------------------------------------------------------------
#                               疑問点
#-------------------------------------------------------------------------------------
・tfidfVectorizerを用いて、tfidf化しているがこの時の挙動をあんまり知らない(おそらく純粋なtfidfではない)
・depbigram-tifidf-uniにかんして、depbigramモデルとunigramを直接つなげてベクトルにしているが、別々のベクトル空間モデルとして類似度を測定して、それの重み付き平均でよいのでは?
	・そのためにはdevsetもいる
・類似度の日本語での評価ってどうやるんだと思ったけど、結局Task依存だからannotationしないと正しいかもわからないのか
#-------------------------------------------------------------------------------------
#                               教師ありモデルについて
#-------------------------------------------------------------------------------------
・Corpus
	二つの質問に対して、類似度をn(5程度?)段階でannotateしてもらう。
	学習としては、二つの質問からunigram-overlapなどの素性を抽出し、類似度のregressionを行う。
	・ とりあえず、設計にかんして森先生と一度話し合うのが望ましい	

・NER
	素性として、固有表現の共起に重みをつけるのはわりと良さそうなきがするので、やってもいいかも
	そのためにはNERの設計が必要ではあるが

・かかり受け/単語分割
	植物系の特殊な単語を利用する以上ここのannotationも必要であろう。

・日本語WordNet
	統語論的な類似度を利用するために日本語WordNetを利用したいが、そもそも利用できるのか、使えるレベルなのか?

・
